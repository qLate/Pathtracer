#version 460 core

#define FLT_MAX  1000000
#define PI 3.14159265359
#define PHI 1.61803398874

#define RAY_DEFAULT_ARGS FLT_MAX, -1, vec3(0), vec3(0), vec2(0)

const float boxLineWidth = 0.02;

struct Object
{
    int objType;
    int materialIndex;
    vec2 _pad;
    vec4 pos;
    vec4 properties; // [Mesh(trianglesStart, triangleCount) : Sphere(radiusSquared) : Plane(normal)]
};

struct Ray
{
    vec3 pos, dir;
    float maxDis;
    float t;
    int materialIndex;
    vec3 surfaceNormal;
    vec3 interPoint;
    vec2 uvPos;
};

// ----------- BUFFERS -----------
uniform int objectCount;
layout(std140, binding = 4) uniform Objects
{
    Object objects[1];
};

/// #include "default/utils.glsl"
/// #include "intersection.glsl"

// **************************************************************************
// ---------------------------------- MAIN ----------------------------------
// **************************************************************************
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

uniform vec3 rayPos;
uniform vec3 rayDir;
uniform float rayMaxDis;

struct Raycast
{
    vec3 hitPos;
    vec3 hitNormal;
    vec2 hitUV;
};

layout(std140, binding = 20) /*buffer*/ uniform SSBO {
    Raycast raycast;
};

void main()
{
    Ray ray = Ray(rayPos, rayDir, rayMaxDis, RAY_DEFAULT_ARGS);

    intersectBVHTree(ray, false);

    raycast = Raycast(ray.interPoint, ray.surfaceNormal, ray.uvPos);
}
